#pragma once
#include "nmtools/array/evaluator/opencl/kernels/selu.hpp"
#include "nmtools/array/evaluator/opencl/kernels/isfinite.hpp"
#include "nmtools/array/evaluator/opencl/kernels/softsign.hpp"
#include "nmtools/array/evaluator/opencl/kernels/prelu.hpp"
#include "nmtools/array/evaluator/opencl/kernels/arcsinh.hpp"
#include "nmtools/array/evaluator/opencl/kernels/hardswish.hpp"
#include "nmtools/array/evaluator/opencl/kernels/where.hpp"
#include "nmtools/array/evaluator/opencl/kernels/log10.hpp"
#include "nmtools/array/evaluator/opencl/kernels/silu.hpp"
#include "nmtools/array/evaluator/opencl/kernels/arcsin.hpp"
#include "nmtools/array/evaluator/opencl/kernels/reciprocal.hpp"
#include "nmtools/array/evaluator/opencl/kernels/arccosh.hpp"
#include "nmtools/array/evaluator/opencl/kernels/isinf.hpp"
#include "nmtools/array/evaluator/opencl/kernels/ceil.hpp"
#include "nmtools/array/evaluator/opencl/kernels/add.hpp"
#include "nmtools/array/evaluator/opencl/kernels/relu6.hpp"
#include "nmtools/array/evaluator/opencl/kernels/hardshrink.hpp"
#include "nmtools/array/evaluator/opencl/kernels/tanh.hpp"
#include "nmtools/array/evaluator/opencl/kernels/arctanh.hpp"
#include "nmtools/array/evaluator/opencl/kernels/exp.hpp"
#include "nmtools/array/evaluator/opencl/kernels/atleast_1d.hpp"
#include "nmtools/array/evaluator/opencl/kernels/square.hpp"
#include "nmtools/array/evaluator/opencl/kernels/broadcast_to.hpp"
#include "nmtools/array/evaluator/opencl/kernels/template_binary_ufunc.hpp"
#include "nmtools/array/evaluator/opencl/kernels/expand_dims.hpp"
#include "nmtools/array/evaluator/opencl/kernels/transpose.hpp"
#include "nmtools/array/evaluator/opencl/kernels/pad.hpp"
#include "nmtools/array/evaluator/opencl/kernels/flip.hpp"
#include "nmtools/array/evaluator/opencl/kernels/arctan.hpp"
#include "nmtools/array/evaluator/opencl/kernels/celu.hpp"
#include "nmtools/array/evaluator/opencl/kernels/signbit.hpp"
#include "nmtools/array/evaluator/opencl/kernels/squeeze.hpp"
#include "nmtools/array/evaluator/opencl/kernels/exp2.hpp"
#include "nmtools/array/evaluator/opencl/kernels/multiply.hpp"
#include "nmtools/array/evaluator/opencl/kernels/sqrt.hpp"
#include "nmtools/array/evaluator/opencl/kernels/leaky_relu.hpp"
#include "nmtools/array/evaluator/opencl/kernels/softplus.hpp"
#include "nmtools/array/evaluator/opencl/kernels/isnan.hpp"
#include "nmtools/array/evaluator/opencl/kernels/softshrink.hpp"
#include "nmtools/array/evaluator/opencl/kernels/trunc.hpp"
#include "nmtools/array/evaluator/opencl/kernels/rint.hpp"
#include "nmtools/array/evaluator/opencl/kernels/log_sigmoid.hpp"
#include "nmtools/array/evaluator/opencl/kernels/negative.hpp"
#include "nmtools/array/evaluator/opencl/kernels/sigmoid.hpp"
#include "nmtools/array/evaluator/opencl/kernels/cosh.hpp"
#include "nmtools/array/evaluator/opencl/kernels/relu.hpp"
#include "nmtools/array/evaluator/opencl/kernels/subtract.hpp"
#include "nmtools/array/evaluator/opencl/kernels/log.hpp"
#include "nmtools/array/evaluator/opencl/kernels/resize.hpp"
#include "nmtools/array/evaluator/opencl/kernels/atleast_2d.hpp"
#include "nmtools/array/evaluator/opencl/kernels/pooling.hpp"
#include "nmtools/array/evaluator/opencl/kernels/arccos.hpp"
#include "nmtools/array/evaluator/opencl/kernels/tanhshrink.hpp"
#include "nmtools/array/evaluator/opencl/kernels/floor.hpp"
#include "nmtools/array/evaluator/opencl/kernels/invert.hpp"
#include "nmtools/array/evaluator/opencl/kernels/sinh.hpp"
#include "nmtools/array/evaluator/opencl/kernels/sin.hpp"
#include "nmtools/array/evaluator/opencl/kernels/log1p.hpp"
#include "nmtools/array/evaluator/opencl/kernels/cbrt.hpp"
#include "nmtools/array/evaluator/opencl/kernels/expm1.hpp"
#include "nmtools/array/evaluator/opencl/kernels/cos.hpp"
#include "nmtools/array/evaluator/opencl/kernels/tan.hpp"
#include "nmtools/array/evaluator/opencl/kernels/tile.hpp"
#include "nmtools/array/evaluator/opencl/kernels/template_unary_ufunc.hpp"
#include "nmtools/array/evaluator/opencl/kernels/repeat.hpp"
#include "nmtools/array/evaluator/opencl/kernels/flatten.hpp"
#include "nmtools/array/evaluator/opencl/kernels/hardtanh.hpp"
#include "nmtools/array/evaluator/opencl/kernels/log2.hpp"
#include "nmtools/array/evaluator/opencl/kernels/mish.hpp"
#include "nmtools/array/evaluator/opencl/kernels/fabs.hpp"
#include "nmtools/array/evaluator/opencl/kernels/elu.hpp"
#include "nmtools/array/evaluator/opencl/kernels/positive.hpp"
#include "nmtools/array/evaluator/opencl/kernels/reshape.hpp"
#include "nmtools/array/evaluator/opencl/kernels/divide.hpp"