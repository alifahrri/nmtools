diff --git a/CMakeLists.txt b/CMakeLists.txt
index 4d5280d24..b467ebf6a 100644
--- a/CMakeLists.txt
+++ b/CMakeLists.txt
@@ -143,6 +143,11 @@ else()
   set(LLVM_VERIFY_MODULE_DEFAULT 0)
 endif()
 
+if(POCL_MAX_WORKGROUP_STRING_LENGTH)
+  message(STATUS "Setting maximum workgroup string length to '${POCL_MAX_WORKGROUP_STRING_LENGTH}'")
+  add_compile_definitions(POCL_MAX_WORKGROUP_STRING_LENGTH=${POCL_MAX_WORKGROUP_STRING_LENGTH})
+endif()
+
 ##################################################################################
 
 macro(set_expr VAR)
diff --git a/lib/CL/devices/common.c b/lib/CL/devices/common.c
index 892e3c3ef..0d4075c4e 100644
--- a/lib/CL/devices/common.c
+++ b/lib/CL/devices/common.c
@@ -77,7 +77,11 @@
 
 #include "_kernel_constants.h"
 
+#ifndef POCL_MAX_WORKGROUP_STRING_LENGTH
 #define WORKGROUP_STRING_LENGTH 1024
+#else
+#define WORKGROUP_STRING_LENGTH POCL_MAX_WORKGROUP_STRING_LENGTH
+#endif
 
 uint64_t last_object_id = 0;
 
@@ -1107,7 +1111,10 @@ pocl_check_kernel_dlhandle_cache (_cl_command_node *command,
                                   int retain,
                                   int specialize)
 {
-  char workgroup_string[WORKGROUP_STRING_LENGTH];
+  int workgroup_string_length = pocl_get_int_option("POCL_WORKGROUP_STRING_LENGTH",
+                                                    WORKGROUP_STRING_LENGTH);
+  char* workgroup_string = (char*)malloc(workgroup_string_length * sizeof(char));
+
   pocl_dlhandle_cache_item *ci = NULL;
   const char *dl_error = NULL;
   _cl_command_run *run_cmd = &command->command.run;
@@ -1151,10 +1158,11 @@ pocl_check_kernel_dlhandle_cache (_cl_command_node *command,
   if (ci->dlhandle == NULL || dl_error != NULL)
     POCL_ABORT ("dlopen(\"%s\") failed with '%s'.\n"
                 "note: missing symbols in the kernel binary might be"
-                " reported as 'file not found' errors.\n",
+                " reported as 'file not found' errors or clipped symbol name"
+                " (try set env POCL_WORKGROUP_STRING_LENGTH to increase).\n",
                 module_fn, dl_error);
 
-  snprintf (workgroup_string, WORKGROUP_STRING_LENGTH,
+  snprintf (workgroup_string, workgroup_string_length,
             "_pocl_kernel_%s_workgroup", run_cmd->kernel->name);
 
   ci->wg = dlsym (ci->dlhandle, workgroup_string);
@@ -1163,7 +1171,7 @@ pocl_check_kernel_dlhandle_cache (_cl_command_node *command,
   if (ci->wg == NULL || dl_error != NULL)
     {
       // Older OSX dyld APIs need the name without the underscore.
-      snprintf (workgroup_string, WORKGROUP_STRING_LENGTH,
+      snprintf (workgroup_string, workgroup_string_length,
                 "pocl_kernel_%s_workgroup", run_cmd->kernel->name);
       ci->wg = dlsym (ci->dlhandle, workgroup_string);
       dl_error = dlerror ();
@@ -1171,7 +1179,8 @@ pocl_check_kernel_dlhandle_cache (_cl_command_node *command,
       if (ci->wg == NULL || dl_error != NULL)
         POCL_ABORT ("dlsym(\"%s\", \"%s\") failed with '%s'.\n"
                     "note: missing symbols in the kernel binary might be"
-                    " reported as 'file not found' errors.\n",
+                    " reported as 'file not found' errors or clipped symbol name"
+                    " (try set env POCL_WORKGROUP_STRING_LENGTH to increase).\n",
                     module_fn, workgroup_string, dl_error);
     }
 
@@ -1181,6 +1190,7 @@ pocl_check_kernel_dlhandle_cache (_cl_command_node *command,
   POCL_UNLOCK (pocl_dlhandle_lock);
   POCL_MEM_FREE (module_fn);
 
+  free(workgroup_string);
   return ci;
 }
 
