name: opencl

on:
  push:
    branches:
      - 'master'
    tags:
      - 'v*'
  pull_request:
    branches:
    - '*'

jobs:
  gcc-9-opencl:
    name: gcc-9-opencl
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v2
      - name: Set up GCC
        uses: egor-tensin/setup-gcc@v1
        with:
          version: 9
          platform: x64
      - name: install pocl
        run: |
          export LLVM_VERSION=12
          sudo apt install -y python3-dev libpython3-dev build-essential ocl-icd-libopencl1 cmake git pkg-config libclang-${LLVM_VERSION}-dev clang llvm-${LLVM_VERSION} make ninja-build ocl-icd-libopencl1 ocl-icd-dev ocl-icd-opencl-dev libhwloc-dev zlib1g zlib1g-dev clinfo dialog apt-utils libxml2-dev libclang-cpp${LLVM_VERSION}-dev libclang-cpp${LLVM_VERSION} llvm-${LLVM_VERSION}-dev intel-opencl-icd
          sudo bash scripts/install_pocl.sh
      - name: setup doctest
        run: bash scripts/download_doctest_header.sh -d include/
      - name: build
        run: mkdir -p build/ && cd build/ && cmake -DCMAKE_BUILD_TYPE=Debug -DNMTOOLS_BUILD_OPENCL_TESTS=ON -DNMTOOLS_OPENCL_TEST_ALL=ON .. && make -j2 numeric-tests-opencl-doctest VERBOSE=1
      - name: run tests
        run: |
          build/tests/opencl/numeric-tests-opencl-doctest

  clang-opencl:
    name: clang-opencl
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v2
      - name: Set up GCC
        uses: egor-tensin/setup-gcc@v1
        with:
          version: 9
          platform: x64
      - name: install pocl
        run: |
          export LLVM_VERSION=12
          sudo apt install -y python3-dev libpython3-dev build-essential ocl-icd-libopencl1 cmake git pkg-config libclang-${LLVM_VERSION}-dev clang llvm-${LLVM_VERSION} make ninja-build ocl-icd-libopencl1 ocl-icd-dev ocl-icd-opencl-dev libhwloc-dev zlib1g zlib1g-dev clinfo dialog apt-utils libxml2-dev libclang-cpp${LLVM_VERSION}-dev libclang-cpp${LLVM_VERSION} llvm-${LLVM_VERSION}-dev intel-opencl-icd
          sudo bash scripts/install_pocl.sh
      - name: install llvm-spirv
        run: |
          sudo bash scripts/install_llvm_spirv.sh
      - name: setup doctest
        run: bash scripts/download_doctest_header.sh -d include/
      - name: build
        run: mkdir -p build/ && cd build/ && cmake -DCMAKE_TOOLCHAIN_FILE=../cmake/toolchains/clang.cmake -DCMAKE_BUILD_TYPE=Debug -DNMTOOLS_BUILD_OPENCL_TESTS=ON -DNMTOOLS_OPENCL_TEST_ALL=ON .. && make -j2 numeric-tests-opencl-doctest VERBOSE=1
      - name: run tests
        run: |
          build/tests/opencl/numeric-tests-opencl-doctest